apiVersion: v1
kind: Service
metadata:
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: getambassador.io/v3alpha1
      kind:  AuthService
      name:  authentication
      auth_service: "auth-svc:8000"
      path_prefix: "/v0/authz"
      ambassador_id: [ "kasten.io/k10" ]
      allowed_request_headers:
      - "x-forwarded-access-token"
      ---
      apiVersion: getambassador.io/v3alpha1
      kind: Host
      name: ambassadorhost
      hostname: "*"
      ambassador_id: [ "kasten.io/k10" ]
      requestPolicy:
        insecure:
          action: Route
      ---
      apiVersion: getambassador.io/v3alpha1
      kind: Listener
      name: ambassadorlistener
      port: 8000
      securityModel: XFP
      protocol: HTTPS
      hostBinding:
        namespace:
          from: SELF
      ambassador_id: [ "kasten.io/k10" ]
      ---
      apiVersion: getambassador.io/v3alpha1
      kind:  Module
      config:
        service_port: 8000
      ambassador_id: [ "kasten.io/k10" ]
    meta.helm.sh/release-name: k10
    meta.helm.sh/release-namespace: kasten-io
  creationTimestamp: "2022-12-13T08:51:51Z"
  labels:
    app: k10
    app.kubernetes.io/instance: k10
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: k10
    helm.sh/chart: k10-5.5.1
    heritage: Helm
    release: k10
    service: gateway
  name: gateway
  namespace: kasten-io
  resourceVersion: "4387"
  uid: 66fbe98d-de2e-4ce3-ba0a-94b6d176a88c
spec:
  type: NodePort
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: http
    port: 8000
    protocol: TCP
    targetPort: 8000
    nodePort: 30080
  selector:
    service: gateway
  sessionAffinity: None
status:
  loadBalancer: {}